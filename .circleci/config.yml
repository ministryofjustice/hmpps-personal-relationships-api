version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@11.0.0

parameters:
  slack-channel-prod-alerts:
    type: string
    # Normally team specific alert channel e.g. hmpps_tech_alerts, syscon-alerts, dps_sed_alerts
    # This is to avoid a general alert dumping ground that no-one then monitors
    default: managing-contacts-alerts-prod
  slack-channel-non-prod-alerts:
    type: string
    default: managing-contacts-alerts-non-prod
  java-version:
    type: string
    default: "21.0"
  postgres-tag:
    type: string
    default: "16"
  java-tag:
    type: string
    default: "21.0"

jobs:
  validate:
    executor:
      name: hmpps/java_postgres
      jdk_tag: << pipeline.parameters.java-version >>
      postgres_tag: << pipeline.parameters.postgres-tag >>
      postgres_db: "personal-relationships-db"
      postgres_username: "contacts"
      postgres_password: "contacts"
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: ./gradlew check
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

  gatling_performance_tests:
    executor:
      name: hmpps/java
      tag: << pipeline.parameters.java-tag >>
    steps:
      - checkout
      - hmpps/k8s_setup
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          name: Running gatling tests
          command: |
            set +x        
            # Use double quotes instead of single quotes to allow variable expansion
            read -r user secret jwt < <(echo $(kubectl -n hmpps-personal-relationships-dev get secret hmpps-personal-relationships-perf-test-creds -o json | jq '.data[] |= @base64d' | jq -r '.data.SYSTEM_CLIENT_ID, .data.SYSTEM_CLIENT_SECRET, .data.JWT'))
            export CLIENT_ID=$user
            export CLIENT_SECRET=$secret
            export AUTH_TOKEN=$jwt
            export AUTH_URL=https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/token
            export BASE_URL=https://personal-relationships-api-dev.hmpps.service.justice.gov.uk
            echo "export CLIENT_ID=$user" >> $BASH_ENV
            echo "export CLIENT_SECRET=$secret" >> $BASH_ENV
            echo "export AUTH_TOKEN=$jwt" >> $BASH_ENV
            echo "export AUTH_URL=$AUTH_URL" >> $BASH_ENV
            echo "export BASE_URL=$BASE_URL" >> $BASH_ENV

            ./gradlew gatlingRun --all \
            -DclientId=${CLIENT_ID} \
            -DclientSecret=${CLIENT_SECRET} \
            -DauthUrl=${AUTH_URL} \
            -DbaseUrl=${BASE_URL} \
            -DauthToken=${AUTH_TOKEN} \
            -DtestDuration=${GATLING_TEST_DURATION:-5} \
            -DtestPauseRangeMin=${GATLING_PAUSE_MIN:-3} \
            -DtestPauseRangeMax=${GATLING_PAUSE_MAX:-5} \
            -DtestRepeat=${GATLING_TEST_REPEAT:-5} \
            -Denvironment=${GATLING_ENVIRONMENT:-dev} \
            -DresponseTimePercentile3=${GATLING_RESPONSE_TIME_PERCENTILE:-1000} \
            -DsuccessfulRequestsPercentage=${GATLING_SUCCESS_PERCENTAGE:-95}
            
            set -x

      - store_artifacts:
          path: build/reports/gatling
          destination: gatling-reports
      - store_test_results:
          path: build/reports/gatling

workflows:
  build-test-and-deploy:
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
      - gatling_performance_tests:
          filters:
            tags:
              ignore: /.*/
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_multiplatform_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - validate
            - build_docker
            - helm_lint
          helm_timeout: 5m
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          jira_update: true
          jira_env_type: staging
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          slack_notification: true
          slack_channel_name: << pipeline.parameters.slack-channel-non-prod-alerts >>
          context:
            - hmpps-common-vars
            - hmpps-personal-relationships-preprod
          requires:
            - request-preprod-approval
          helm_timeout: 5m
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          jira_update: true
          jira_env_type: production
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          slack_notification: true
          slack_channel_name: << pipeline.parameters.slack-channel-prod-alerts >>
          context:
            - hmpps-common-vars
            - hmpps-personal-relationships-prod
          requires:
            - request-prod-approval
          helm_timeout: 5m

  security:
    triggers:
      - schedule:
          cron: "9 5 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          cache_key: "v2_0"
          jdk_tag: << pipeline.parameters.java-version >>
          slack_channel: << pipeline.parameters.slack-channel-non-prod-alerts >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.slack-channel-non-prod-alerts >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          jdk_tag: << pipeline.parameters.java-version >>
          slack_channel: << pipeline.parameters.slack-channel-non-prod-alerts >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "28 5 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.slack-channel-non-prod-alerts >>
          context:
            - veracode-credentials
            - hmpps-common-vars

  performance:
    triggers:
      - schedule:
          cron: "0 2 * * 1" # Run at 2:00 AM every Monday
          filters:
            branches:
              only:
                - main
    jobs:
      - gatling_performance_tests:
          context:
            - hmpps-common-vars
